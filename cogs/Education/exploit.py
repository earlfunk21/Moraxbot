from discord.ext import commands
from ._compsystem import ComputerSystem as CS

class Exploit(commands.Cog):
    def __init__(self, Morax) -> None:
        super().__init__()
        self.Morax = Morax

    @commands.command()
    async def arith(self, ctx, n: int, x, *a: int):
        d = a[1] - a[0]
        x = a[0] + (n - 1) * d
        await ctx.send(f"The {n}ᵗʰterm of the given sequence is {x}")

    @commands.command()
    async def unpacked(self, ctx, n):
        UDF = "".join(CS().Unpacked(n))
        HD = "".join(CS().hexadecimal(CS().Unpacked(n)))
        await ctx.send(UDF)
        await ctx.send("Hexadecimal: " + HD)

    @commands.command()
    async def packed(self, ctx, n):
        PDF = "".join(CS().packed(n))
        HD = "".join(CS().hexadecimal(CS().packed(n)))
        await ctx.send(PDF)
        await ctx.send("Hexadecimal: " + HD)

    @commands.command()
    async def truevalue_hexa(self, ctx, n):
        truevalue = CS().truevalue(Hexadecimal=n)
        await ctx.send(truevalue)

    @commands.command()
    async def truevalue_octa(self, ctx, n):
        truevalue = CS().truevalue(Octa=n)
        await ctx.send(truevalue)

    @commands.command()
    async def truevalue_deci(self, ctx, n):
        truevalue = CS().truevalue(Decimal=n)
        await ctx.send(truevalue)

    @commands.command()
    async def truevalue_bina(self, ctx, n):
        truevalue = CS().truevalue(Binary=n)
        await ctx.send(truevalue)
